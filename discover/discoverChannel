import pika
import time
import threading
import sys

consumidor_activo = 1

try:
    def connexio():
        parameters = pika.ConnectionParameters('localhost')
        return pika.BlockingConnection(parameters)
    #Fem una connexio
    connection = connexio()
    canal = connection.channel()
    llista = []
    segona_llista = []
    #Creem un canal d'events
    canal.exchange_declare(exchange='descobrir xat', exchange_type='fanout')

    #Publiquem un event per descobrir xats
    canal.basic_publish(exchange='descobrir xat',routing_key='', body='request', properties=pika.BasicProperties(delivery_mode=2))

    #Funcio per poder processar les respostes dels xats existents
    def callback(canal, metode, propietats, cos):
        #print(cos.decode())
        global llista
        llista.append(cos.decode())
       
 

    #Creem una cua temporal per poder rebre respostes
    resultat = canal.queue_declare(queue='', exclusive=True)
    nom_cua = resultat.method.queue

    #Vinculem la cua amb el event de descobriment i adjuntem la funcio de callback
    canal.queue_bind(exchange='descobrir xat', queue=nom_cua)
    canal.basic_consume(queue=nom_cua, on_message_callback=callback, auto_ack=True)

        

    #Iniciem
    print('Esperant xats ...')
    while consumidor_activo<200 :
        consumidor_activo += 1
        connection.process_data_events()

    
    for elemento in llista:
        #print(elemento)
        if elemento not in segona_llista:
            segona_llista.append(elemento)

    print("-----------------")

    for jo in segona_llista:
        print(jo)

    if not segona_llista:
        print("No hi ha cap xat creat")

    
except pika.exceptions.StreamLostError:
    connection=connexio()
    channel = connection.channel()

